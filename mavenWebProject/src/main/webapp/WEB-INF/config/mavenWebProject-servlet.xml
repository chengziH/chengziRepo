<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
	      http://www.springframework.org/schema/mvc/spring-mvc.xsd
		  http://www.springframework.org/schema/beans 
		  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		  http://www.springframework.org/schema/context 
		  http://www.springframework.org/schema/context/spring-context.xsd
		  http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 激活@Required、@Autowired、等标注   激活注释-->
	<context:annotation-config />

	<!-- DispatcherServlet上下文，只扫描com.springMvc.web下标注为@controller的类 -->
    <context:component-scan base-package="com.chengzi.web">
    	<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:include-filter> -->
    </context:component-scan>

	<!-- 让DispatcherServlet启用基于annotation的HandleMapping -->
    <mvc:annotation-driven /> 
    
    <!-- 静态资源处理  css、js、images -->
    <mvc:resources mapping="/resources/" location="/resources/" />
    
    
    <!--  在SpringMVC中启用对JSON的支持 -->
    <!-- 可以将相同的数据呈现成不同的数据表现形式-->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    	<property name="order" value="1"></property>
    	<property name="mediaTypes">
    		<map>
    			<entry key="json" value="application/json"></entry>
    			<entry key="xml" value="application/xml"></entry>
    			<entry key="htm" value="text/html"></entry>
    		</map>
    	</property>
    	<property name="defaultViews">
    		<list>
    			<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"></bean>
    		</list>
    	</property>
    	<property name="ignoreAcceptHeader" value="true" />
    </bean>
    
    
    <!-- 配置 -->
    <!-- 配置VM视图解析器 -->
    <!-- 
    <bean id="velocityViewResolver"
          class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="cache" value="true" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="requestContextAttribute" value="true" />
        <property name="exposeSessionAttributes" value="true" />
        <property name="prefix" value=""></property>
        <property name="order" value="1"></property>
        <property name="allowSessionOverride" value="true"></property>
        <property name="contentType" value="text/html; charset=UTF-8"></property>
        <property name="toolboxConfigLocation" value="/WEB-INF/config/velocity-toolbox.xml"></property>
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.velocity.VelocityLayoutView" />
        <property name="layoutUrl" value="backstage/layout/layout.vm" />
    </bean>
    <bean id="velocityConfig"
          class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/" />
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="parser.pool.size">100</prop>
                <prop key="velocimacro.library">macros/macros.vm</prop>
                <prop key="velocimacro.library.autoreload">true</prop>
            </props>
        </property>
    </bean>
     -->
    <!--  配置JSON -->
    
    
    <!-- 配置JSP视图 -->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
       <property name="prefix" value="/WEB-INF/jsp/"/>
       <property name="suffix" value=".jsp"/>     
       <property name="contentType" value="text/html;charset=UTF-8"/>
       <property name="order" value="1"/>
    </bean>
    
    <!-- 解析上传的文件 -->
    <!-- 209715200=200*1024*1024 即200M， resolveLazily为true表示 为了推迟文件解析，方便捕获文件异常-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="209715200"></property>
    	<property name="defaultEncoding" value="UTF-8"></property>
    	<property name="resolveLazily" value="true"></property><!-- 是否延迟加载 -->
    </bean>
    
</beans>